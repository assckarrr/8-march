body {
    background: linear-gradient(135deg, #ff9a9e, #fad0c4);
    background-attachment: fixed;
    font-family: 'Poppins', sans-serif;
    color: white;
    text-align: center;
}

h1 {
    font-size: 6rem; /* Bigger text */
    font-weight: bold;
    text-align: center;
    color: white;
    font-family: 'Dancing Script', 'Great Vibes', cursive; /* Beautiful Font */
    text-shadow: 4px 4px 12px rgba(255, 105, 180, 0.8); /* Soft glow effect */
    margin-bottom: 20px;
    animation: fadeIn 1.5s ease-in-out;
}




    .main-container {
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 80vh; /* Push everything to center vertically */
    }
    


nav {
    margin-top: 50px; /* Increase space between text & buttons */
    display: flex;
    justify-content: center; /* Center buttons */
    gap: 20px; /* Add spacing between buttons */
}


nav a {
    text-decoration: none;
    color: white;
    font-size: 1.4rem;
    font-weight: bold;
    padding: 15px 25px;
    margin: 10px;
    background: linear-gradient(135deg, #ff4d6d, #ff7eb3); /* More vibrant */
    border-radius: 20px;
    box-shadow: 0 4px 10px rgba(255, 105, 180, 0.5);
    transition: 0.3s ease-in-out;
    display: flex;
    align-items: center;
    gap: 8px; /* Space for icons */
}

nav a:hover {
    background: linear-gradient(135deg, #ff7eb3, #ff4d6d);
    transform: scale(1.1);
}



.image-container {
    position: relative;
    overflow: hidden;
    border-radius: 15px;
    box-shadow: 0 4px 10px rgba(255, 105, 180, 0.3);
    transition: transform 0.3s ease-in-out;
    z-index: 1; /* Ensure images are properly stacked */
}

.image-container img {
    width: 200px;
    height: 200px;
    object-fit: cover;
    border-radius: 10px;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.image-container img:hover {
    transform: scale(1.1);
}

.image-container::after {
    content: attr(data-caption);
    position: absolute;
    bottom: 0; /* Align caption at the bottom */
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.7);
    color: white;
    font-size: 1rem;
    padding: 10px 15px;
    border-radius: 0 0 15px 15px;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    white-space: normal; /* Allow text wrapping */
    width: 100%; /* Make sure it fits the image width */
    text-align: center; /* Keep text centered */
    line-height: 1.4;
    min-height: 50px; /* Ensures enough space */
    box-sizing: border-box;
    z-index: 10;
}

.image-container:hover::after {
    opacity: 1;
    
}


/* Lightbox styles */
.lightbox {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
}

.lightbox img {
    max-width: 80%;
    max-height: 80%;
    border-radius: 10px;
}

.lightbox p {
    color: white;
    font-size: 1.2rem;
    margin-top: 10px;
    background: rgba(0, 0, 0, 0.7);
    padding: 5px 10px;
    border-radius: 5px;
}

/* Show lightbox when active */
.lightbox.active {
    display: flex;
}


.letter-container {
    max-width: 600px;
    margin: 50px auto;
    text-align: center;
    font-size: 1.3rem;
    color: white;
    background: rgba(255, 255, 255, 0.1);
    padding: 25px;
    border-radius: 15px;
    box-shadow: 0px 4px 20px rgba(255, 182, 193, 0.5); /* Soft pink glow */
    animation: fadeIn 2s ease-in-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.surprise-image {
    width: 300px;
    height: auto;
    border-radius: 15px;
    margin-top: 20px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
    opacity: 0;
    transition: opacity 1.5s ease-in-out;
}

.show-image {
    opacity: 1;
}

/* Floating Hearts Animation with Glow */
@keyframes floatUp {
    0% {
        transform: translateY(0) scale(1);
        opacity: 1;
        text-shadow: 0 0 5px #ff4d6d, 0 0 10px #ff99a3;
    }
    100% {
        transform: translateY(-200px) scale(1.5);
        opacity: 0;
        text-shadow: 0 0 15px #ff99a3, 0 0 30px #ff4d6d;
    }
}

.heart {
    position: absolute;
    color: #ff4d6d;
    font-size: 1.8rem;
    opacity: 0;
    animation: floatUp 3s ease-in-out forwards;
    text-shadow: 0 0 5px #ff4d6d, 0 0 10px #ff99a3;
}


/* Floating Background Hearts */
@keyframes floatHearts {
    0% {
        transform: translateY(100vh) scale(0.5);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: translateY(-10vh) scale(1);
        opacity: 0;
    }
}

.heart-bg {
    position: absolute;
    color: #ff4d6d;
    font-size: 2rem;
    opacity: 0;
    animation: floatHearts 8s ease-in-out infinite;
}

footer {
    text-align: center;
    font-size: 1rem;
    color: white;
    background: rgba(255, 255, 255, 0.2);
    padding: 15px;
    position: fixed;
    bottom: 0;
    width: 100%;
}

@media (max-width: 768px) {
    h1 {
        font-size: 2.5rem; /* Adjust title for small screens */
    }
    nav {
        flex-direction: column;
    }
    nav a {
        width: 80%;
        text-align: center;
    }
}




contact.ejs


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Catch the Hearts Game ❤️</title>
    <link rel="stylesheet" href="/style.css">
    <style>
        /* Game Container */
        .game-container {
            position: relative;
            width: 100%;
            height: 90vh;
            background: linear-gradient(180deg, #ff758c, #ff7eb3); /* Improved contrast */
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        /* Game Info */
        .game-info {
            position: absolute;
            top: 10px;
            color: white;
            font-size: 1.4rem;
            font-weight: bold;
        }

        /* Score Display */
        .score {
            position: absolute;
            top: 50px;
            color: white;
            font-size: 1.4rem;
            font-weight: bold;
        }

        /* Falling Hearts */
        .heart {
            position: absolute;
            width: 50px;
            height: 50px;
            transition: transform 0.1s linear;
            animation: fall linear forwards;
        }

        @keyframes fall {
            from {
                transform: translateY(-50px);
            }
            to {
                transform: translateY(85vh); /* Ensures hearts fall to the bottom */
            }
        }

        /* Hand (Catcher) */
        .hand {
            position: absolute;
            bottom: 5%;
            width: 90px;
            height: auto;
            left: 50%;
            transform: translateX(-50%);
            transition: left 0.05s ease-out; /* Smoother movement */
        }

    </style>
</head>
<body>
    <div class="game-container">
        <div class="game-info">Move the hands to catch as many hearts as possible! ❤️</div>
        <div class="score">Score: <span id="score">0</span></div>

        <!-- Falling Hearts Will Be Created in JS -->
        <img src="/images/hands.png" class="hand" id="hand" alt="Hands">
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const gameContainer = document.querySelector(".game-container");
            const hand = document.getElementById("hand");
            const scoreElement = document.getElementById("score");
            let score = 0;

            // Function to create falling hearts
            function createHeart() {
                const heart = document.createElement("img");
                heart.src = "/images/heart.png";
                heart.classList.add("heart");
                heart.style.left = Math.random() * (window.innerWidth - 50) + "px";
                heart.style.animationDuration = (3 + Math.random() * 2) + "s"; // Random speed
                gameContainer.appendChild(heart);

                // Remove heart when it reaches the bottom
                setTimeout(() => {
                    heart.remove();
                }, 4000);
            }

            // Create hearts at intervals
            setInterval(createHeart, 1000);

            // Move the hand smoothly with the mouse
            document.addEventListener("mousemove", (event) => {
                requestAnimationFrame(() => {
                    hand.style.left = event.clientX - 45 + "px"; // Center hand under cursor
                });
            });

            // Move the hand with arrow keys
            document.addEventListener("keydown", (event) => {
                let left = parseInt(window.getComputedStyle(hand).left);
                if (event.key === "ArrowLeft" && left > 10) {
                    hand.style.left = left - 30 + "px";
                }
                if (event.key === "ArrowRight" && left < window.innerWidth - 100) {
                    hand.style.left = left + 30 + "px";
                }
            });

            // Check for collision with hearts
            function checkCollision() {
                document.querySelectorAll(".heart").forEach((heart) => {
                    let heartRect = heart.getBoundingClientRect();
                    let handRect = hand.getBoundingClientRect();

                    if (
                        heartRect.bottom >= handRect.top &&
                        heartRect.left >= handRect.left &&
                        heartRect.right <= handRect.right
                    ) {
                        heart.remove(); // Remove heart on catch
                        score++;
                        scoreElement.textContent = score;
                    }
                });
            }

            setInterval(checkCollision, 100);
        });
    </script>
</body>
</html>

